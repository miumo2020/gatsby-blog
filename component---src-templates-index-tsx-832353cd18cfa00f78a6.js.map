{"version":3,"file":"component---src-templates-index-tsx-832353cd18cfa00f78a6.js","mappings":"6PAYA,MAiCMA,GAASC,EAAAA,EAAAA,IAAH,idAsBqCC,EAAAA,EAAAA,IAAO,IAAMC,EAAAA,EAAAA,UAtBlD,2CAuBkCD,EAAAA,EAAAA,IAAO,IAAMC,EAAAA,EAAAA,UAvB/C,sCAwB6BD,EAAAA,EAAAA,IAAO,IAAMC,EAAAA,EAAAA,UAxB1C,oFAqCZ,MAtE6D,EAAGC,YAAAA,EAAaC,SAAAA,MAC3E,MAAMC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,eAAKR,IAAKD,IACR,oBACIM,IACA,QAAC,KAAD,CAAMK,GAAIH,EAAUI,IAAI,QAErBC,OAAOC,aAAa,MAIxBC,MAAMC,KAAK,CAAEC,OAAQZ,IAAY,CAACa,EAAGC,KACpC,QAAC,KAAD,CAAMC,IAAM,oBAAmBD,EAAI,IAAKE,UAAWF,EAAI,IAAMf,EAAc,SAAW,GAAIO,GAAK,IAAS,IAANQ,EAAU,GAAKA,EAAI,KAClHA,EAAI,MAIPZ,IACA,QAAC,KAAD,CAAMI,GAAID,EAAUE,IAAI,QAErBC,OAAOC,aAAa,S,iDCejC,MAoJMQ,EAAS,6yBA0Df,MA9MwCC,IACtC,MAAMC,GAAQC,EAAAA,EAAAA,GAASF,EAAMG,KAAKC,QAAQH,MACpCI,GAASH,EAAAA,EAAAA,GAASF,EAAMG,KAAKC,QAAQC,OAE3C,OACE,QAAC,IAAD,CAAa3B,IAAKqB,IAChB,QAACO,EAAA,EAAD,MACE,gBAAMC,KAAMC,EAAAA,EAAAA,QACZ,qBAAQA,EAAAA,EAAAA,QACR,gBAAMC,KAAK,cAAcC,QAASF,EAAAA,EAAAA,eAClC,gBAAMG,SAAS,eAAeD,QAASF,EAAAA,EAAAA,SACvC,gBAAMG,SAAS,UAAUD,QAAQ,aACjC,gBAAMC,SAAS,WAAWD,QAASF,EAAAA,EAAAA,SACnC,gBAAMG,SAAS,iBAAiBD,QAASF,EAAAA,EAAAA,eACzC,gBAAMG,SAAS,SAASD,QAASF,EAAAA,EAAAA,WACjC,gBACEG,SAAS,WACTD,QAAU,GAAEF,EAAAA,EAAAA,WAAiBI,EAAAA,EAAAA,GAAOZ,EAAMG,KAAKC,YAEhDI,EAAAA,EAAAA,WAAmB,gBAAMG,SAAS,oBAAoBD,QAASF,EAAAA,EAAAA,WAC/DA,EAAAA,EAAAA,yBACC,gBAAMC,KAAK,2BAA2BC,QAASF,EAAAA,EAAAA,0BAEjD,gBAAMC,KAAK,eAAeC,QAAQ,yBAClC,gBAAMD,KAAK,gBAAgBC,QAASF,EAAAA,EAAAA,SACpC,gBAAMC,KAAK,sBAAsBC,QAASF,EAAAA,EAAAA,eAC1C,gBAAMC,KAAK,cAAcC,QAASF,EAAAA,EAAAA,WAClC,gBACEC,KAAK,gBACLC,QAAU,GAAEF,EAAAA,EAAAA,WAAiBI,EAAAA,EAAAA,GAAOZ,EAAMG,KAAKC,YAEhDI,EAAAA,EAAAA,UACC,gBACEC,KAAK,eACLC,QAAU,IAAGF,EAAAA,EAAAA,QAAAA,MAAqB,wBAAwB,QAG9D,gBAAMG,SAAS,iBAAiBD,QAAST,EAAMf,cAC/C,gBAAMyB,SAAS,kBAAkBD,QAASL,EAAOnB,eAEnD,QAAC2B,EAAA,EAAD,MACE,eACEnC,IAAG,CAAGoC,EAAAA,GAAOC,EAAAA,GAAYC,EAAAA,GAAtB,OACHlB,UAAU,yBACVmB,MAAO,CACLC,gBAAkB,SAAON,EAAAA,EAAAA,GAAOZ,EAAMG,KAAKC,eAG7C,eAAK1B,IAAKyC,EAAAA,KACR,QAACC,EAAA,EAAD,CAASC,QAAM,KACf,QAAC,KAAD,CAAmBvB,UAAU,wBAC3B,QAAC,KAAD,CAAWA,UAAU,cAClBE,EAAMG,KAAKmB,MACV,eACEL,MAAO,CAAEM,UAAW,QACpBC,KAAKZ,EAAAA,EAAAA,GAAOZ,EAAMG,KAAKmB,MACvBG,IAAKjB,EAAAA,EAAAA,QAGPA,EAAAA,EAAAA,QAGJ,QAAC,KAAD,KAAkBA,EAAAA,EAAAA,iBAIxB,gBAAMkB,GAAG,YAAYhD,IAAG,CAAGiD,EAAAA,GAAUb,EAAAA,GAAb,SACtB,eAAKpC,IAAG,CAAGyC,EAAAA,GAAOS,EAAAA,GAAV,SACN,eAAKlD,IAAG,CAAGmD,EAAAA,GAAH,QACL7B,EAAMG,KAAK2B,kBAAkBC,MAAMC,KAAI,CAACC,EAAMC,KAGV,IAAhCD,EAAKE,KAAKC,YAAYC,QAErB,QAACC,EAAA,GAAD,CAAUzC,IAAKoC,EAAKE,KAAKI,OAAOC,KAAMP,KAAMA,EAAKE,KAAMM,MAAiB,IAAVP,SAOzElC,EAAM0C,SACN1C,EAAM2C,YAAY7D,SAAW,IAC5B,QAAC,EAAD,CACED,YAAamB,EAAM2C,YAAY9D,YAC/BC,SAAUkB,EAAM2C,YAAY7D,YAGhC,QAAC8D,EAAA,EAAD","sources":["webpack://gatsby-casper/./src/components/Pagination.tsx","webpack://gatsby-casper/./src/templates/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { darken } from 'polished';\r\nimport { css } from '@emotion/react';\r\n\r\nimport { colors } from '../styles/colors';\r\n\r\nexport interface PaginationProps {\r\n  currentPage: number;\r\n  numPages: number;\r\n}\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n\r\n  return (\r\n    <nav css={navCss}>\r\n      <div>\r\n        {!isFirst && (\r\n          <Link to={prevPage} rel=\"prev\">\r\n            {/* << symbol */}\r\n            {String.fromCharCode(171)}\r\n          </Link>\r\n        )}\r\n\r\n        {Array.from({ length: numPages }, (_, i) => (\r\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\r\n            {i + 1}\r\n          </Link>\r\n        ))}\r\n\r\n        {!isLast && (\r\n          <Link to={nextPage} rel=\"next\">\r\n            {/* >> symbol */}\r\n            {String.fromCharCode(187)}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst navCss = css`\r\n  text-align: center;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n\r\n  a {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\r\n    background: #fff;\r\n    color: black;\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n    transition: background-color .3s;\r\n    border: 1px solid #ddd;\r\n    margin: 0 4px;\r\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n    border-radius: 6px;\r\n    margin-bottom: 5px;\r\n    min-width: 50px;\r\n\r\n    &.active {\r\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n    }\r\n\r\n    &:hover:not(.active) {\r\n      background-color: #ddd;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Pagination;\r\n","import { graphql } from 'gatsby';\r\nimport { GatsbyImage, getSrc, getImage } from \"gatsby-plugin-image\";\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { css } from '@emotion/react';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport Pagination from '../components/Pagination';\r\nimport { PostCard } from '../components/PostCard';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  Posts,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n  SiteHeaderStyles,\r\n} from '../styles/shared';\r\nimport config from '../website-config';\r\nimport { PageContext } from './post';\r\n\r\nexport interface IndexProps {\r\n  pageContext: {\r\n    currentPage: number;\r\n    numPages: number;\r\n  };\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fixed: GatsbyImage;\r\n      };\r\n    };\r\n    header: {\r\n      childImageSharp: {\r\n        fixed: GatsbyImage;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexPage: React.FC<IndexProps> = props => {\r\n  const width = getImage(props.data.header).width;\r\n  const height = getImage(props.data.header).height;\r\n\r\n  return (\r\n    <IndexLayout css={HomePosts}>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{config.title}</title>\r\n        <meta name=\"description\" content={config.description} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={config.title} />\r\n        <meta property=\"og:description\" content={config.description} />\r\n        <meta property=\"og:url\" content={config.siteUrl} />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={`${config.siteUrl}${getSrc(props.data.header)}`}\r\n        />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.googleSiteVerification && (\r\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\r\n        )}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={config.title} />\r\n        <meta name=\"twitter:description\" content={config.description} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl} />\r\n        <meta\r\n          name=\"twitter:image\"\r\n          content={`${config.siteUrl}${getSrc(props.data.header)}`}\r\n        />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        <meta property=\"og:image:width\" content={width.toString()} />\r\n        <meta property=\"og:image:height\" content={height.toString()} />\r\n      </Helmet>\r\n      <Wrapper>\r\n        <div\r\n          css={[outer, SiteHeader, SiteHeaderStyles]}\r\n          className=\"site-header-background\"\r\n          style={{\r\n            backgroundImage: `url('${getSrc(props.data.header)}')`,\r\n          }}\r\n        >\r\n          <div css={inner}>\r\n            <SiteNav isHome />\r\n            <SiteHeaderContent className=\"site-header-content\">\r\n              <SiteTitle className=\"site-title\">\r\n                {props.data.logo ? (\r\n                  <img\r\n                    style={{ maxHeight: '55px' }}\r\n                    src={getSrc(props.data.logo)}\r\n                    alt={config.title}\r\n                  />\r\n                ) : (\r\n                  config.title\r\n                )}\r\n              </SiteTitle>\r\n              <SiteDescription>{config.description}</SiteDescription>\r\n            </SiteHeaderContent>\r\n          </div>\r\n        </div>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={[inner, Posts]}>\r\n            <div css={[PostFeed]}>\r\n              {props.data.allMarkdownRemark.edges.map((post, index) => {\r\n                // filter out drafts in production\r\n                return (\r\n                  (post.node.frontmatter.draft !== true ||\r\n                    process.env.NODE_ENV !== 'production') && (\r\n                    <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\r\n                  )\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {props.children}\r\n        {props.pageContext.numPages > 1 && (\r\n          <Pagination\r\n            currentPage={props.pageContext.currentPage}\r\n            numPages={props.pageContext.numPages}\r\n          />\r\n        )}\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`query blogPageQuery($skip: Int!, $limit: Int!) {\r\n  logo: file(relativePath: {eq: \"img/ghost-logo.png\"}) {\r\n    childImageSharp {\r\n      gatsbyImageData(layout: FIXED)\r\n    }\r\n  }\r\n  header: file(relativePath: {eq: \"img/blog-cover.png\"}) {\r\n    childImageSharp {\r\n      gatsbyImageData(width: 2000, quality: 100, layout: FIXED)\r\n    }\r\n  }\r\n  allMarkdownRemark(\r\n    sort: {fields: [frontmatter___date], order: DESC}\r\n    filter: {frontmatter: {draft: {ne: true}}}\r\n    limit: $limit\r\n    skip: $skip\r\n  ) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          date\r\n          tags\r\n          draft\r\n          excerpt\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: FULL_WIDTH)\r\n            }\r\n          }\r\n          author {\r\n            id\r\n            bio\r\n            avatar {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n              }\r\n            }\r\n          }\r\n        }\r\n        excerpt\r\n        fields {\r\n          readingTime {\r\n            text\r\n          }\r\n          layout\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst HomePosts = css`\r\n  @media (min-width: 795px) {\r\n    .post-card-large {\r\n      flex: 1 1 100%;\r\n      flex-direction: row;\r\n      padding-bottom: 40px;\r\n      min-height: 280px;\r\n      border-top: 0;\r\n    }\r\n\r\n    .post-card-large .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-large:not(.no-image) .post-card-header {\r\n      margin-top: 0;\r\n    }\r\n\r\n    .post-card-large .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      margin-bottom: 0;\r\n      min-height: 380px;\r\n    }\r\n\r\n    .post-card-large .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card-large .post-card-content {\r\n      flex: 0 1 361px;\r\n      justify-content: center;\r\n    }\r\n\r\n    .post-card-large .post-card-title {\r\n      margin-top: 0;\r\n      font-size: 3.2rem;\r\n    }\r\n\r\n    .post-card-large .post-card-content-link {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-large .post-card-meta {\r\n      padding: 0 0 0 40px;\r\n    }\r\n\r\n    .post-card-large .post-card-excerpt p {\r\n      margin-bottom: 1.5em;\r\n      font-size: 1.8rem;\r\n      line-height: 1.5em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage;\r\n"],"names":["navCss","css","darken","colors","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","props","width","getImage","data","header","height","Helmet","lang","config","name","content","property","getSrc","Wrapper","outer","SiteHeader","SiteHeaderStyles","style","backgroundImage","inner","SiteNav","isHome","logo","maxHeight","src","alt","id","SiteMain","Posts","PostFeed","allMarkdownRemark","edges","map","post","index","node","frontmatter","draft","PostCard","fields","slug","large","children","pageContext","Footer"],"sourceRoot":""}