{"version":3,"file":"e0525e89-398fb640e7a43864a3d5.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { GatsbyImage, getSrc, getImage } from \"gatsby-plugin-image\";\r\nimport * as _ from 'lodash';\r\nimport { lighten, setLightness } from 'polished';\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Footer } from '../components/Footer';\r\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\r\nimport PostContent from '../components/PostContent';\r\nimport { ReadNext } from '../components/ReadNext';\r\nimport { Subscribe } from '../components/subscribe/Subscribe';\r\nimport { Wrapper } from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport { colors } from '../styles/colors';\r\nimport { inner, outer, SiteMain } from '../styles/shared';\r\nimport config from '../website-config';\r\nimport { AuthorList } from '../components/AuthorList';\r\n\r\nexport interface Author {\r\n  id: string;\r\n  bio: string;\r\n  avatar: {\r\n    children: Array<{\r\n      fluid: FluidObject;\r\n    }>;\r\n  };\r\n}\r\n\r\ninterface PageTemplateProps {\r\n  location: Location;\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fixed: any;\r\n      };\r\n    };\r\n    markdownRemark: {\r\n      html: string;\r\n      htmlAst: any;\r\n      excerpt: string;\r\n      frontmatter: {\r\n        title: string;\r\n        date: string;\r\n        userDate: string;\r\n        image: {\r\n          childImageSharp: {\r\n            fluid: any;\r\n          };\r\n        };\r\n        excerpt: string;\r\n        tags: string[];\r\n        author: Author[];\r\n      };\r\n      fields: {\r\n        readingTime: {\r\n          text: string;\r\n        };\r\n      };\r\n    };\r\n    relatedPosts: {\r\n      totalCount: number;\r\n      edges: Array<{\r\n        node: {\r\n          timeToRead: number;\r\n          frontmatter: {\r\n            title: string;\r\n            date: string;\r\n          };\r\n          fields: {\r\n            slug: string;\r\n          };\r\n        };\r\n      }>;\r\n    };\r\n  };\r\n  pageContext: {\r\n    prev: PageContext;\r\n    next: PageContext;\r\n  };\r\n}\r\n\r\nexport interface PageContext {\r\n  excerpt: string;\r\n  fields: {\r\n    slug: string;\r\n    readingTime: {\r\n      text: string;\r\n    };\r\n  };\r\n  frontmatter: {\r\n    image: {\r\n      childImageSharp: {\r\n        fluid: GatsbyImage;\r\n      };\r\n    };\r\n    excerpt: string;\r\n    title: string;\r\n    date: string;\r\n    draft?: boolean;\r\n    tags: string[];\r\n    author: Author[];\r\n  };\r\n}\r\n\r\nconst PageTemplate = ({ data, pageContext, location }: PageTemplateProps) => {\r\n  const post = data.markdownRemark;\r\n  let width = '';\r\n  let height = '';\r\n  if (post.frontmatter.image) {\r\n    width = getImage(post.frontmatter.image).width;\r\n    height = getImage(post.frontmatter.image).height;\r\n  }\r\n\r\n  const date = new Date(post.frontmatter.date);\r\n  // 2018-08-20\r\n  const datetime = format(date, 'yyyy-MM-dd');\r\n  // 20 AUG 2018\r\n  const displayDatetime = format(date, 'dd LLL yyyy');\r\n\r\n  return (\r\n    <IndexLayout className=\"post-template\">\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{post.frontmatter.title}</title>\r\n\r\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content={post.frontmatter.title} />\r\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\r\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\r\n        {post.frontmatter.image && (\r\n          <meta\r\n            property=\"og:image\"\r\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\r\n          />\r\n        )}\r\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\r\n        {/* not sure if modified time possible */}\r\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\r\n        {post.frontmatter.tags && (\r\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\r\n        )}\r\n\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\r\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\r\n        {post.frontmatter.image && (\r\n          <meta\r\n            name=\"twitter:image\"\r\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\r\n          />\r\n        )}\r\n        <meta name=\"twitter:label1\" content=\"Written by\" />\r\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].id} />\r\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\r\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:creator\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        {width && <meta property=\"og:image:width\" content={width} />}\r\n        {height && <meta property=\"og:image:height\" content={height} />}\r\n      </Helmet>\r\n      <Wrapper css={PostTemplate}>\r\n        <header className=\"site-header\">\r\n          <div css={[outer, SiteNavMain]}>\r\n            <div css={inner}>\r\n              <SiteNav isPost post={post.frontmatter} />\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            {/* TODO: no-image css tag? */}\r\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\r\n              <PostFullHeader className=\"post-full-header\">\r\n                <PostFullTags className=\"post-full-tags\">\r\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\r\n                    <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\r\n                      {post.frontmatter.tags[0]}\r\n                    </Link>\r\n                  )}\r\n                </PostFullTags>\r\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\r\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\r\n                  {post.frontmatter.excerpt}\r\n                </PostFullCustomExcerpt>\r\n                <PostFullByline className=\"post-full-byline\">\r\n                  <section className=\"post-full-byline-content\">\r\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\r\n                    <section className=\"post-full-byline-meta\">\r\n                      <h4 className=\"author-name\">\r\n                        {post.frontmatter.author.map(author => (\r\n                          <Link key={author.id} to={`/author/${_.kebabCase(author.id)}/`}>\r\n                            {author.id}\r\n                          </Link>\r\n                        ))}\r\n                      </h4>\r\n                      <div className=\"byline-meta-content\">\r\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\r\n                          {displayDatetime}\r\n                        </time>\r\n                        <span className=\"byline-reading-time\">\r\n                          <span className=\"bull\">&bull;</span>{post.fields.readingTime.text}\r\n                        </span>\r\n                      </div>\r\n                    </section>\r\n                  </section>\r\n                </PostFullByline>\r\n              </PostFullHeader>\r\n\r\n              {post.frontmatter.image && (\r\n                <PostFullImage>\r\n                  <GatsbyImage\r\n                    image={getImage(post.frontmatter.image)}\r\n                    style={{ height: '100%' }}\r\n                    alt={post.frontmatter.title} />\r\n                </PostFullImage>\r\n              )}\r\n              <PostContent htmlAst={post.htmlAst} />\r\n\r\n              {/* The big email subscribe modal content */}\r\n              {config.showSubscribe && <Subscribe title={config.title} />}\r\n            </article>\r\n          </div>\r\n        </main>\r\n\r\n        <ReadNext\r\n          currentPageSlug={location.pathname}\r\n          tags={post.frontmatter.tags}\r\n          relatedPosts={data.relatedPosts}\r\n          pageContext={pageContext}\r\n        />\r\n\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nconst PostTemplate = css`\r\n  .site-main {\r\n    margin-top: 64px;\r\n    background: #fff;\r\n    padding-bottom: 4vw;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    .site-main {\r\n      /* background: var(--darkmode); */\r\n      background: ${colors.darkmode};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostFull = css`\r\n  position: relative;\r\n  z-index: 50;\r\n`;\r\n\r\nexport const NoImage = css`\r\n  .post-full-content {\r\n    padding-top: 0;\r\n  }\r\n\r\n  .post-full-content:before,\r\n  .post-full-content:after {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const PostFullHeader = styled.header`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  padding: 70px 170px 50px;\r\n  border-top-left-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n\r\n  @media (max-width: 1170px) {\r\n    padding: 60px 11vw 50px;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    padding-right: 5vw;\r\n    padding-left: 5vw;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    padding: 20px 0 35px;\r\n  }\r\n`;\r\n\r\nconst PostFullTags = styled.section`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  /* color: var(--midgrey); */\r\n  color: ${colors.midgrey};\r\n  font-size: 1.3rem;\r\n  line-height: 1.4em;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst PostFullCustomExcerpt = styled.p`\r\n  margin: 20px 0 0;\r\n  color: var(--midgrey);\r\n  font-family: Georgia, serif;\r\n  font-size: 2.3rem;\r\n  line-height: 1.4em;\r\n  font-weight: 300;\r\n\r\n  @media (max-width: 500px) {\r\n    font-size: 1.9rem;\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)};\r\n  }\r\n`;\r\n\r\nconst PostFullByline = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 35px 0 0;\r\n  padding-top: 15px;\r\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\r\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\r\n\r\n  .post-full-byline-content {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .post-full-byline-content .author-list {\r\n    justify-content: flex-start;\r\n    padding: 0 12px 0 0;\r\n  }\r\n\r\n  .post-full-byline-meta {\r\n    margin: 2px 0 0;\r\n    /* color: color(var(--midgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.midgrey)};\r\n    font-size: 1.2rem;\r\n    line-height: 1.2em;\r\n    letter-spacing: 0.2px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .post-full-byline-meta h4 {\r\n    margin: 0 0 3px;\r\n    font-size: 1.3rem;\r\n    line-height: 1.4em;\r\n    font-weight: 500;\r\n  }\r\n\r\n  .post-full-byline-meta h4 a {\r\n    /* color: color(var(--darkgrey) l(+10%)); */\r\n    color: ${lighten('0.1', colors.darkgrey)};\r\n  }\r\n\r\n  .post-full-byline-meta h4 a:hover {\r\n    /* color: var(--darkgrey); */\r\n    color: ${colors.darkgrey};\r\n  }\r\n\r\n  .post-full-byline-meta .bull {\r\n    display: inline-block;\r\n    margin: 0 4px;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\r\n    border-top-color: ${lighten('0.15', colors.darkmode)};\r\n\r\n    .post-full-byline-meta h4 a {\r\n      color: rgba(255, 255, 255, 0.75);\r\n    }\r\n\r\n    .post-full-byline-meta h4 a:hover {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostFullTitle = styled.h1`\r\n  margin: 0 0 0.2em;\r\n  color: ${setLightness('0.05', colors.darkgrey)};\r\n  @media (max-width: 500px) {\r\n    margin-top: 0.2em;\r\n    font-size: 3.3rem;\r\n  }\r\n\r\n  @media (prefers-color-scheme: dark) {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n`;\r\n\r\nconst PostFullImage = styled.figure`\r\n  margin: 25px 0 50px;\r\n  height: 800px;\r\n  background: ${colors.lightgrey} center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: 1170px) {\r\n    margin: 25px -6vw 50px;\r\n    border-radius: 0;\r\n    img {\r\n      max-width: 1170px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    height: 400px;\r\n  }\r\n  @media (max-width: 500px) {\r\n    margin-bottom: 4vw;\r\n    height: 350px;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`query ($slug: String, $primaryTag: String) {\r\n  logo: file(relativePath: {eq: \"img/ghost-logo.png\"}) {\r\n    childImageSharp {\r\n      gatsbyImageData(layout: FIXED)\r\n    }\r\n  }\r\n  markdownRemark(fields: {slug: {eq: $slug}}) {\r\n    html\r\n    htmlAst\r\n    excerpt\r\n    fields {\r\n      readingTime {\r\n        text\r\n      }\r\n    }\r\n    frontmatter {\r\n      title\r\n      userDate: date(formatString: \"D MMMM YYYY\")\r\n      date\r\n      tags\r\n      excerpt\r\n      image {\r\n        childImageSharp {\r\n          gatsbyImageData(layout: FULL_WIDTH)\r\n        }\r\n      }\r\n      author {\r\n        id\r\n        bio\r\n        avatar {\r\n          children {\r\n            ... on ImageSharp {\r\n              gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  relatedPosts: allMarkdownRemark(\r\n    filter: {frontmatter: {tags: {in: [$primaryTag]}, draft: {ne: true}}}\r\n    limit: 5\r\n    sort: {fields: [frontmatter___date], order: DESC}\r\n  ) {\r\n    totalCount\r\n    edges {\r\n      node {\r\n        id\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          date\r\n        }\r\n        fields {\r\n          readingTime {\r\n            text\r\n          }\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default PageTemplate;\r\n"],"names":["PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","PostFullTags","PostFullCustomExcerpt","lighten","PostFullByline","PostFullTitle","setLightness","PostFullImage","data","pageContext","location","post","markdownRemark","width","height","frontmatter","image","getImage","date","Date","datetime","format","displayDatetime","className","lang","config","title","name","content","excerpt","property","pathname","getSrc","tags","author","id","outer","SiteNavMain","inner","isPost","SiteMain","length","to","authors","tooltip","map","key","dateTime","fields","readingTime","text","G","style","alt","htmlAst","currentPageSlug","relatedPosts"],"sourceRoot":""}